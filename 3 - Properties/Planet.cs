using System;
using System.Collections.Generic;
using System.Text;

namespace Properties {
    public class Body {

        public Body(string name, long radius = 0, int period = 0)
        {
            this.Name = name;
            this.Radius = radius;
            this.Period = period;
        }

        // Manually created property with backing private variable
        // Usefull if get/set actualy does any work other than boilerplate
        // store/return
        private long radius;
        /// <summary>
        /// Representing Orbital Radius in kilometers
        /// </summary>
        public long Radius {
            get {
                return radius;
            }
            set {
                radius = value;
            }
        }

        // Automatically implemented property
        // Clean, easy to read. Backing field is being
        // auto-generated by compiler. Recommended
        // for boilerplate getter/setter, can easily be converted
        // to manually implemented without breaking anything
        /// <summary>
        /// Orbital period in days
        /// </summary>
        public int Period { get; set; }

        public int objectRadius { get; set; }

        public int rotationalPeriod { get; set; }

        public String objectColor { get; set; }





        // Read only property. Usefull for returning a calculated value
        // or if the value is set once in the constructor
        /// <summary>
        /// Orbital Velocity
        /// </summary>
        public double Velocity {
            get {
                if (Period == 0) return 0;
                return Radius * 2 * Math.PI / Period;
            }
        }

        public double angVelo
        {
            get
            {
                if(Period == 0) return 0;
                return (2 * Math.PI) / Period;
            }
        }

        public double angPos(int time)
        {
                return angVelo * time;
        }

        public (double x, double y) getPosition(int time)
        {
            double angle = angPos(time);
            double x = Radius * Math.Cos(angle);
            double y = Radius * Math.Sin(angle);
            return (x, y);
        }

        public (double x, double y) GetMoonPosition(int time, Body moon)
        {
            var (px, py) = getPosition(time); // Get planet's position relative to the sun
            var (mx, my) = moon.getPosition(time); // Get moon's position relative to the planet
            return (px + mx, py + my); // Moon's absolute position relative to the sun
        }

        // Property with protected set. (Could just as well have been private)
        /// <summary>
        /// Name of Body
        /// </summary>
        public string Name { get; protected set; }

        // Indexer
        /// <summary>
        /// List of orbiting bodies (moons)
        /// </summary>
        Body[] moons = new Body[100];
        public Body this[int i] {
            get {
                return moons[i];
            }
            set {
                moons[i] = value;
            }
        }


    }
}
